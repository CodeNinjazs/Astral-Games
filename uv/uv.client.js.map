{
  "version": 3,
  "sources": ["../node_modules/events/events.js", "../src/client/dom/document.js", "../src/client/hook.js", "../src/client/dom/element.js", "../src/client/dom/node.js", "../src/client/dom/attr.js", "../src/client/native/function.js", "../src/client/native/object.js", "../src/client/requests/fetch.js", "../src/client/requests/xhr.js", "../src/client/requests/eventsource.js", "../src/client/history.js", "../src/client/location.js", "../src/client/message.js", "../src/client/navigator.js", "../src/client/worker.js", "../node_modules/@mercuryworkshop/bare-mux/dist/index.mjs", "../src/client/url.js", "../src/client/index.js", "../src/client/storage.js", "../src/client/dom/style.js", "../src/client/idb.js", "../src/client/requests/websocket.js"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass DocumentHook extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.document = this.window.document;\r\n        this.Document = this.window.Document || {};\r\n        this.DOMParser = this.window.DOMParser || {};\r\n        this.docProto = this.Document.prototype || {};\r\n        this.domProto = this.DOMParser.prototype || {};\r\n        this.title = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.docProto,\r\n            'title'\r\n        );\r\n        this.cookie = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.docProto,\r\n            'cookie'\r\n        );\r\n        this.referrer = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.docProto,\r\n            'referrer'\r\n        );\r\n        this.domain = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.docProto,\r\n            'domain'\r\n        );\r\n        this.documentURI = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.docProto,\r\n            'documentURI'\r\n        );\r\n        this.write = this.docProto.write;\r\n        this.writeln = this.docProto.writeln;\r\n        this.querySelector = this.docProto.querySelector;\r\n        this.querySelectorAll = this.docProto.querySelectorAll;\r\n        this.parseFromString = this.domProto.parseFromString;\r\n        this.URL = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.docProto,\r\n            'URL'\r\n        );\r\n    }\r\n    overrideParseFromString() {\r\n        this.ctx.override(\r\n            this.domProto,\r\n            'parseFromString',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [string, type] = args;\r\n\r\n                const event = new HookEvent({ string, type }, target, that);\r\n                this.emit('parseFromString', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.string,\r\n                    event.data.type\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideQuerySelector() {\r\n        this.ctx.override(\r\n            this.docProto,\r\n            'querySelector',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [selectors] = args;\r\n\r\n                const event = new HookEvent({ selectors }, target, that);\r\n                this.emit('querySelector', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.selectors);\r\n            }\r\n        );\r\n    }\r\n    overrideDomain() {\r\n        this.ctx.overrideDescriptor(this.docProto, 'domain', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getDomain', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n            set: (target, that, [val]) => {\r\n                const event = new HookEvent({ value: val }, target, that);\r\n                this.emit('setDomain', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.value);\r\n            },\r\n        });\r\n    }\r\n    overrideReferrer() {\r\n        this.ctx.overrideDescriptor(this.docProto, 'referrer', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('referrer', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideCreateTreeWalker() {\r\n        this.ctx.override(\r\n            this.docProto,\r\n            'createTreeWalker',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [root, show = 0xffffffff, filter, expandEntityReferences] =\r\n                    args;\r\n\r\n                const event = new HookEvent(\r\n                    { root, show, filter, expandEntityReferences },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('createTreeWalker', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.root,\r\n                    event.data.show,\r\n                    event.data.filter,\r\n                    event.data.expandEntityReferences\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideWrite() {\r\n        this.ctx.override(this.docProto, 'write', (target, that, args) => {\r\n            if (!args.length) return target.apply(that, args);\r\n            let [...html] = args;\r\n\r\n            const event = new HookEvent({ html }, target, that);\r\n            this.emit('write', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.apply(event.that, event.data.html);\r\n        });\r\n        this.ctx.override(this.docProto, 'writeln', (target, that, args) => {\r\n            if (!args.length) return target.apply(that, args);\r\n            let [...html] = args;\r\n\r\n            const event = new HookEvent({ html }, target, that);\r\n            this.emit('writeln', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.apply(event.that, event.data.html);\r\n        });\r\n    }\r\n    overrideDocumentURI() {\r\n        this.ctx.overrideDescriptor(this.docProto, 'documentURI', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('documentURI', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideURL() {\r\n        this.ctx.overrideDescriptor(this.docProto, 'URL', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('url', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideCookie() {\r\n        this.ctx.overrideDescriptor(this.docProto, 'cookie', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getCookie', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n            set: (target, that, [value]) => {\r\n                const event = new HookEvent({ value }, target, that);\r\n                this.emit('setCookie', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.value);\r\n            },\r\n        });\r\n    }\r\n    overrideTitle() {\r\n        this.ctx.overrideDescriptor(this.docProto, 'title', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getTitle', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n            set: (target, that, [value]) => {\r\n                const event = new HookEvent({ value }, target, that);\r\n                this.emit('setTitle', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.value);\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport default DocumentHook;\r\n", "/**\r\n *\r\n * @template Data\r\n * @template Target\r\n * @template That\r\n * @property {Data} data\r\n * @property {Target} target\r\n * @property {That} that\r\n */\r\nclass HookEvent {\r\n    #intercepted;\r\n    #returnValue;\r\n    /**\r\n     *\r\n     * @param {Data} data\r\n     * @param {Target} target\r\n     * @param {That} that\r\n     */\r\n    constructor(data = {}, target = null, that = null) {\r\n        this.#intercepted = false;\r\n        this.#returnValue = null;\r\n        /**\r\n         * @type {Data}\r\n         */\r\n        this.data = data;\r\n        /**\r\n         * @type {Target}\r\n         */\r\n        this.target = target;\r\n        /**\r\n         * @type {That}\r\n         */\r\n        this.that = that;\r\n    }\r\n    get intercepted() {\r\n        return this.#intercepted;\r\n    }\r\n    get returnValue() {\r\n        return this.#returnValue;\r\n    }\r\n    respondWith(input) {\r\n        this.#returnValue = input;\r\n        this.#intercepted = true;\r\n    }\r\n}\r\n\r\nexport default HookEvent;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass ElementApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.Audio = this.window.Audio;\r\n        this.Element = this.window.Element;\r\n        this.elemProto = this.Element ? this.Element.prototype : {};\r\n        this.innerHTML = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.elemProto,\r\n            'innerHTML'\r\n        );\r\n        this.outerHTML = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.elemProto,\r\n            'outerHTML'\r\n        );\r\n        this.setAttribute = this.elemProto.setAttribute;\r\n        this.getAttribute = this.elemProto.getAttribute;\r\n        this.removeAttribute = this.elemProto.removeAttribute;\r\n        this.hasAttribute = this.elemProto.hasAttribute;\r\n        this.querySelector = this.elemProto.querySelector;\r\n        this.querySelectorAll = this.elemProto.querySelectorAll;\r\n        this.insertAdjacentHTML = this.elemProto.insertAdjacentHTML;\r\n        this.insertAdjacentText = this.elemProto.insertAdjacentText;\r\n    }\r\n    overrideQuerySelector() {\r\n        this.ctx.override(\r\n            this.elemProto,\r\n            'querySelector',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [selectors] = args;\r\n\r\n                const event = new HookEvent({ selectors }, target, that);\r\n                this.emit('querySelector', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.selectors);\r\n            }\r\n        );\r\n    }\r\n    overrideAttribute() {\r\n        this.ctx.override(\r\n            this.elemProto,\r\n            'getAttribute',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [name] = args;\r\n\r\n                const event = new HookEvent({ name }, target, that);\r\n                this.emit('getAttribute', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.name);\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.elemProto,\r\n            'setAttribute',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [name, value] = args;\r\n\r\n                const event = new HookEvent({ name, value }, target, that);\r\n                this.emit('setAttribute', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.name,\r\n                    event.data.value\r\n                );\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.elemProto,\r\n            'hasAttribute',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [name] = args;\r\n\r\n                const event = new HookEvent({ name }, target, that);\r\n                this.emit('hasAttribute', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.name);\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.elemProto,\r\n            'removeAttribute',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [name] = args;\r\n\r\n                const event = new HookEvent({ name }, target, that);\r\n                this.emit('removeAttribute', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.name);\r\n            }\r\n        );\r\n    }\r\n    overrideAudio() {\r\n        this.ctx.override(\r\n            this.window,\r\n            'Audio',\r\n            (target, that, args) => {\r\n                if (!args.length) return new target(...args);\r\n                let [url] = args;\r\n\r\n                const event = new HookEvent({ url }, target, that);\r\n                this.emit('audio', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return new event.target(event.data.url);\r\n            },\r\n            true\r\n        );\r\n    }\r\n    overrideHtml() {\r\n        this.hookProperty(this.Element, 'innerHTML', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getInnerHTML', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n            set: (target, that, [val]) => {\r\n                const event = new HookEvent({ value: val }, target, that);\r\n                this.emit('setInnerHTML', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                target.call(that, event.data.value);\r\n            },\r\n        });\r\n        this.hookProperty(this.Element, 'outerHTML', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getOuterHTML', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n            set: (target, that, [val]) => {\r\n                const event = new HookEvent({ value: val }, target, that);\r\n                this.emit('setOuterHTML', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                target.call(that, event.data.value);\r\n            },\r\n        });\r\n    }\r\n    overrideInsertAdjacentHTML() {\r\n        this.ctx.override(\r\n            this.elemProto,\r\n            'insertAdjacentHTML',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [position, html] = args;\r\n\r\n                const event = new HookEvent({ position, html }, target, that);\r\n                this.emit('insertAdjacentHTML', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.position,\r\n                    event.data.html\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideInsertAdjacentText() {\r\n        this.ctx.override(\r\n            this.elemProto,\r\n            'insertAdjacentText',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [position, text] = args;\r\n\r\n                const event = new HookEvent({ position, text }, target, that);\r\n                this.emit('insertAdjacentText', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.position,\r\n                    event.data.text\r\n                );\r\n            }\r\n        );\r\n    }\r\n    hookProperty(element, prop, handler) {\r\n        // if (!element || !(prop in element)) return false;\r\n        if (!element) return false;\r\n\r\n        if (this.ctx.nativeMethods.isArray(element)) {\r\n            for (const elem of element) {\r\n                this.hookProperty(elem, prop, handler);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const proto = element.prototype;\r\n\r\n        this.ctx.overrideDescriptor(proto, prop, handler);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default ElementApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass NodeApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.Node = ctx.window.Node || {};\r\n        this.nodeProto = this.Node.prototype || {};\r\n        this.compareDocumentPosition = this.nodeProto.compareDocumentPosition;\r\n        this.contains = this.nodeProto.contains;\r\n        this.insertBefore = this.nodeProto.insertBefore;\r\n        this.replaceChild = this.nodeProto.replaceChild;\r\n        this.append = this.nodeProto.append;\r\n        this.appendChild = this.nodeProto.appendChild;\r\n        this.removeChild = this.nodeProto.removeChild;\r\n\r\n        this.textContent = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.nodeProto,\r\n            'textContent'\r\n        );\r\n        this.parentNode = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.nodeProto,\r\n            'parentNode'\r\n        );\r\n        this.parentElement = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.nodeProto,\r\n            'parentElement'\r\n        );\r\n        this.childNodes = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.nodeProto,\r\n            'childNodes'\r\n        );\r\n        this.baseURI = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.nodeProto,\r\n            'baseURI'\r\n        );\r\n        this.previousSibling = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.nodeProto,\r\n            'previousSibling'\r\n        );\r\n        this.ownerDocument = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.nodeProto,\r\n            'ownerDocument'\r\n        );\r\n    }\r\n    overrideTextContent() {\r\n        this.ctx.overrideDescriptor(this.nodeProto, 'textContent', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getTextContent', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n            set: (target, that, [val]) => {\r\n                const event = new HookEvent({ value: val }, target, that);\r\n                this.emit('setTextContent', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                target.call(that, event.data.value);\r\n            },\r\n        });\r\n    }\r\n    overrideAppend() {\r\n        this.ctx.override(\r\n            this.nodeProto,\r\n            'append',\r\n            (target, that, [...nodes]) => {\r\n                const event = new HookEvent({ nodes }, target, that);\r\n                this.emit('append', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.nodes);\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.nodeProto,\r\n            'appendChild',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [node] = args;\r\n\r\n                const event = new HookEvent({ node }, target, that);\r\n                this.emit('appendChild', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.node);\r\n            }\r\n        );\r\n    }\r\n    overrideBaseURI() {\r\n        this.ctx.overrideDescriptor(this.nodeProto, 'baseURI', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('baseURI', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideParent() {\r\n        this.ctx.overrideDescriptor(this.nodeProto, 'parentNode', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { node: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('parentNode', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.node;\r\n            },\r\n        });\r\n        this.ctx.overrideDescriptor(this.nodeProto, 'parentElement', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { element: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('parentElement', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.node;\r\n            },\r\n        });\r\n    }\r\n    overrideOwnerDocument() {\r\n        this.ctx.overrideDescriptor(this.nodeProto, 'ownerDocument', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { document: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('ownerDocument', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.document;\r\n            },\r\n        });\r\n    }\r\n    overrideCompareDocumentPosit1ion() {\r\n        this.ctx.override(\r\n            this.nodeProto,\r\n            'compareDocumentPosition',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [node] = args;\r\n                const event = new HookEvent({ node }, target, that);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.node);\r\n            }\r\n        );\r\n    }\r\n    overrideChildMethods() {\r\n        this.ctx.override(this.nodeProto, 'removeChild');\r\n    }\r\n}\r\n\r\nexport default NodeApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass AttrApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.Attr = this.window.Attr || {};\r\n        this.attrProto = this.Attr.prototype || {};\r\n        this.value = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.attrProto,\r\n            'value'\r\n        );\r\n        this.name = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.attrProto,\r\n            'name'\r\n        );\r\n        this.getNamedItem = this.attrProto.getNamedItem || null;\r\n        this.setNamedItem = this.attrProto.setNamedItem || null;\r\n        this.removeNamedItem = this.attrProto.removeNamedItem || null;\r\n        this.getNamedItemNS = this.attrProto.getNamedItemNS || null;\r\n        this.setNamedItemNS = this.attrProto.setNamedItemNS || null;\r\n        this.removeNamedItemNS = this.attrProto.removeNamedItemNS || null;\r\n        this.item = this.attrProto.item || null;\r\n    }\r\n    overrideNameValue() {\r\n        this.ctx.overrideDescriptor(this.attrProto, 'name', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('name', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n\r\n        this.ctx.overrideDescriptor(this.attrProto, 'value', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    {\r\n                        name: this.name.get.call(that),\r\n                        value: target.call(that),\r\n                    },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getValue', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n            set: (target, that, [val]) => {\r\n                const event = new HookEvent(\r\n                    { name: this.name.get.call(that), value: val },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('setValue', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                event.target.call(event.that, event.data.value);\r\n            },\r\n        });\r\n    }\r\n    overrideItemMethods() {\r\n        this.ctx.override(\r\n            this.attrProto,\r\n            'getNamedItem',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [name] = args;\r\n\r\n                const event = new HookEvent({ name }, target, that);\r\n                this.emit('getNamedItem', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.name);\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.attrProto,\r\n            'setNamedItem',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [name, value] = args;\r\n\r\n                const event = new HookEvent({ name, value }, target, that);\r\n                this.emit('setNamedItem', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.name,\r\n                    event.data.value\r\n                );\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.attrProto,\r\n            'removeNamedItem',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [name] = args;\r\n\r\n                const event = new HookEvent({ name }, target, that);\r\n                this.emit('removeNamedItem', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.name);\r\n            }\r\n        );\r\n        this.ctx.override(this.attrProto, 'item', (target, that, args) => {\r\n            if (!args.length) return target.apply(that, args);\r\n            let [index] = args;\r\n\r\n            const event = new HookEvent({ index }, target, that);\r\n            this.emit('item', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that, event.data.name);\r\n        });\r\n        this.ctx.override(\r\n            this.attrProto,\r\n            'getNamedItemNS',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [namespace, localName] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { namespace, localName },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getNamedItemNS', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.namespace,\r\n                    event.data.localName\r\n                );\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.attrProto,\r\n            'setNamedItemNS',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [attr] = args;\r\n\r\n                const event = new HookEvent({ attr }, target, that);\r\n                this.emit('setNamedItemNS', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.name);\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.attrProto,\r\n            'removeNamedItemNS',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [namespace, localName] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { namespace, localName },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('removeNamedItemNS', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.namespace,\r\n                    event.data.localName\r\n                );\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport default AttrApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass FunctionHook extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.Function = this.window.Function;\r\n        this.fnProto = this.Function.prototype;\r\n        this.toString = this.fnProto.toString;\r\n        this.fnStrings = ctx.fnStrings;\r\n        this.call = this.fnProto.call;\r\n        this.apply = this.fnProto.apply;\r\n        this.bind = this.fnProto.bind;\r\n    }\r\n    overrideFunction() {\r\n        this.ctx.override(\r\n            this.window,\r\n            'Function',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n\r\n                let script = args[args.length - 1];\r\n                let fnArgs = [];\r\n\r\n                for (let i = 0; i < args.length - 1; i++) {\r\n                    fnArgs.push(args[i]);\r\n                }\r\n\r\n                const event = new HookEvent(\r\n                    { script, args: fnArgs },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('function', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    ...event.data.args,\r\n                    event.data.script\r\n                );\r\n            },\r\n            true\r\n        );\r\n    }\r\n    overrideToString() {\r\n        this.ctx.override(this.fnProto, 'toString', (target, that) => {\r\n            const event = new HookEvent({ fn: that }, target, that);\r\n            this.emit('toString', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.data.fn);\r\n        });\r\n    }\r\n}\r\n\r\nexport default FunctionHook;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass ObjectHook extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.Object = this.window.Object;\r\n        this.getOwnPropertyDescriptors = this.Object.getOwnPropertyDescriptors;\r\n        this.getOwnPropertyDescriptor = this.Object.getOwnPropertyDescriptor;\r\n        this.getOwnPropertyNames = this.Object.getOwnPropertyNames;\r\n    }\r\n    overrideGetPropertyNames() {\r\n        this.ctx.override(\r\n            this.Object,\r\n            'getOwnPropertyNames',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [object] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { names: target.call(that, object) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getOwnPropertyNames', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.names;\r\n            }\r\n        );\r\n    }\r\n    overrideGetOwnPropertyDescriptors() {\r\n        this.ctx.override(\r\n            this.Object,\r\n            'getOwnPropertyDescriptors',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [object] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { descriptors: target.call(that, object) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getOwnPropertyDescriptors', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.descriptors;\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport default ObjectHook;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass Fetch extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.fetch = this.window.fetch;\r\n        this.Request = this.window.Request;\r\n        this.Response = this.window.Response;\r\n        this.Headers = this.window.Headers;\r\n        this.reqProto = this.Request ? this.Request.prototype : {};\r\n        this.resProto = this.Response ? this.Response.prototype : {};\r\n        this.headersProto = this.Headers ? this.Headers.prototype : {};\r\n        this.reqUrl = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.reqProto,\r\n            'url'\r\n        );\r\n        this.resUrl = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.resProto,\r\n            'url'\r\n        );\r\n        this.reqHeaders = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.reqProto,\r\n            'headers'\r\n        );\r\n        this.resHeaders = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.resProto,\r\n            'headers'\r\n        );\r\n    }\r\n    override() {\r\n        this.overrideRequest();\r\n        this.overrideUrl();\r\n        this.overrideHeaders();\r\n        return true;\r\n    }\r\n    overrideRequest() {\r\n        if (!this.fetch) return false;\r\n\r\n        this.ctx.override(this.window, 'fetch', (target, that, args) => {\r\n            if (!args.length || args[0] instanceof this.Request)\r\n                return target.apply(that, args);\r\n\r\n            let [input, options = {}] = args;\r\n            const event = new HookEvent({ input, options }, target, that);\r\n\r\n            this.emit('request', event);\r\n            if (event.intercepted) return event.returnValue;\r\n\r\n            return event.target.call(\r\n                event.that,\r\n                event.data.input,\r\n                event.data.options\r\n            );\r\n        });\r\n\r\n        this.ctx.override(\r\n            this.window,\r\n            'Request',\r\n            (target, that, args) => {\r\n                if (!args.length) return new target(...args);\r\n\r\n                let [input, options = {}] = args;\r\n                const event = new HookEvent({ input, options }, target);\r\n\r\n                this.emit('request', event);\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return new event.target(event.data.input, event.data.options);\r\n            },\r\n            true\r\n        );\r\n        return true;\r\n    }\r\n    overrideUrl() {\r\n        this.ctx.overrideDescriptor(this.reqProto, 'url', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n\r\n                this.emit('requestUrl', event);\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return event.data.value;\r\n            },\r\n        });\r\n\r\n        this.ctx.overrideDescriptor(this.resProto, 'url', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n\r\n                this.emit('responseUrl', event);\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return event.data.value;\r\n            },\r\n        });\r\n        return true;\r\n    }\r\n    overrideHeaders() {\r\n        if (!this.Headers) return false;\r\n\r\n        this.ctx.overrideDescriptor(this.reqProto, 'headers', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n\r\n                this.emit('requestHeaders', event);\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return event.data.value;\r\n            },\r\n        });\r\n\r\n        this.ctx.overrideDescriptor(this.resProto, 'headers', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n\r\n                this.emit('responseHeaders', event);\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return event.data.value;\r\n            },\r\n        });\r\n\r\n        this.ctx.override(this.headersProto, 'get', (target, that, [name]) => {\r\n            if (!name) return target.call(that);\r\n            const event = new HookEvent(\r\n                { name, value: target.call(that, name) },\r\n                target,\r\n                that\r\n            );\r\n\r\n            this.emit('getHeader', event);\r\n            if (event.intercepted) return event.returnValue;\r\n\r\n            return event.data.value;\r\n        });\r\n\r\n        this.ctx.override(this.headersProto, 'set', (target, that, args) => {\r\n            if (2 > args.length) return target.apply(that, args);\r\n\r\n            let [name, value] = args;\r\n            const event = new HookEvent({ name, value }, target, that);\r\n\r\n            this.emit('setHeader', event);\r\n            if (event.intercepted) return event.returnValue;\r\n\r\n            return event.target.call(\r\n                event.that,\r\n                event.data.name,\r\n                event.data.value\r\n            );\r\n        });\r\n\r\n        this.ctx.override(this.headersProto, 'has', (target, that, args) => {\r\n            if (!args.length) return target.call(that);\r\n            let [name] = args;\r\n\r\n            const event = new HookEvent(\r\n                { name, value: target.call(that, name) },\r\n                target,\r\n                that\r\n            );\r\n\r\n            this.emit('hasHeader', event);\r\n            if (event.intercepted) return event.returnValue;\r\n\r\n            return event.data;\r\n        });\r\n\r\n        this.ctx.override(this.headersProto, 'append', (target, that, args) => {\r\n            if (2 > args.length) return target.apply(that, args);\r\n\r\n            let [name, value] = args;\r\n            const event = new HookEvent({ name, value }, target, that);\r\n\r\n            this.emit('appendHeader', event);\r\n            if (event.intercepted) return event.returnValue;\r\n\r\n            return event.target.call(\r\n                event.that,\r\n                event.data.name,\r\n                event.data.value\r\n            );\r\n        });\r\n\r\n        this.ctx.override(this.headersProto, 'delete', (target, that, args) => {\r\n            if (!args.length) return target.apply(that, args);\r\n\r\n            let [name] = args;\r\n            const event = new HookEvent({ name }, target, that);\r\n\r\n            this.emit('deleteHeader', event);\r\n            if (event.intercepted) return event.returnValue;\r\n\r\n            return event.target.call(event.that, event.data.name);\r\n        });\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default Fetch;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass Xhr extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.XMLHttpRequest = this.window.XMLHttpRequest;\r\n        this.xhrProto = this.window.XMLHttpRequest\r\n            ? this.window.XMLHttpRequest.prototype\r\n            : {};\r\n        this.open = this.xhrProto.open;\r\n        this.abort = this.xhrProto.abort;\r\n        this.send = this.xhrProto.send;\r\n        this.overrideMimeType = this.xhrProto.overrideMimeType;\r\n        this.getAllResponseHeaders = this.xhrProto.getAllResponseHeaders;\r\n        this.getResponseHeader = this.xhrProto.getResponseHeader;\r\n        this.setRequestHeader = this.xhrProto.setRequestHeader;\r\n        this.responseURL = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.xhrProto,\r\n            'responseURL'\r\n        );\r\n        this.responseText = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.xhrProto,\r\n            'responseText'\r\n        );\r\n    }\r\n    override() {\r\n        this.overrideOpen();\r\n        this.overrideSend();\r\n        this.overrideMimeType();\r\n        this.overrideGetResHeader();\r\n        this.overrideGetResHeaders();\r\n        this.overrideSetReqHeader();\r\n    }\r\n    overrideOpen() {\r\n        this.ctx.override(this.xhrProto, 'open', (target, that, args) => {\r\n            if (2 > args.length) return target.apply(that, args);\r\n\r\n            let [method, input, async = true, user = null, password = null] =\r\n                args;\r\n            const event = new HookEvent(\r\n                { method, input, async, user, password },\r\n                target,\r\n                that\r\n            );\r\n\r\n            this.emit('open', event);\r\n            if (event.intercepted) return event.returnValue;\r\n\r\n            return event.target.call(\r\n                event.that,\r\n                event.data.method,\r\n                event.data.input,\r\n                event.data.async,\r\n                event.data.user,\r\n                event.data.password\r\n            );\r\n        });\r\n    }\r\n    overrideResponseUrl() {\r\n        this.ctx.overrideDescriptor(this.xhrProto, 'responseURL', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('responseUrl', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideSend() {\r\n        this.ctx.override(\r\n            this.xhrProto,\r\n            'send',\r\n            (target, that, [body = null]) => {\r\n                const event = new HookEvent({ body }, target, that);\r\n\r\n                this.emit('send', event);\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return event.target.call(event.that, event.data.body);\r\n            }\r\n        );\r\n    }\r\n    overrideSetReqHeader() {\r\n        this.ctx.override(\r\n            this.xhrProto,\r\n            'setRequestHeader',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n\r\n                let [name, value] = args;\r\n                const event = new HookEvent({ name, value }, target, that);\r\n\r\n                this.emit('setReqHeader', event);\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.name,\r\n                    event.data.value\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideGetResHeaders() {\r\n        this.ctx.override(\r\n            this.xhrProto,\r\n            'getAllResponseHeaders',\r\n            (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n\r\n                this.emit('getAllResponseHeaders', event);\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return event.data.value;\r\n            }\r\n        );\r\n    }\r\n    overrideGetResHeader() {\r\n        this.ctx.override(\r\n            this.xhrProto,\r\n            'getResponseHeader',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [name] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { name, value: target.call(that, name) },\r\n                    target,\r\n                    that\r\n                );\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return event.data.value;\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport default Xhr;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass EventSourceApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.EventSource = this.window.EventSource || {};\r\n        this.esProto = this.EventSource.prototype || {};\r\n        this.url = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.esProto,\r\n            'url'\r\n        );\r\n        this.CONNECTING = 0;\r\n        this.OPEN = 1;\r\n        this.CLOSED = 2;\r\n    }\r\n    overrideConstruct() {\r\n        this.ctx.override(\r\n            this.window,\r\n            'EventSource',\r\n            (target, that, args) => {\r\n                if (!args.length) return new target(...args);\r\n                let [url, config = {}] = args;\r\n\r\n                const event = new HookEvent({ url, config }, target, that);\r\n                this.emit('construct', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return new event.target(event.data.url, event.data.config);\r\n            },\r\n            true\r\n        );\r\n\r\n        if ('EventSource' in this.window) {\r\n            this.window.EventSource.CONNECTING = this.CONNECTING;\r\n            this.window.EventSource.OPEN = this.OPEN;\r\n            this.window.EventSource.CLOSED = this.CLOSED;\r\n        }\r\n    }\r\n    overrideUrl() {\r\n        this.ctx.overrideDescriptor(this.esProto, 'url', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('url', event);\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport default EventSourceApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from './hook.js';\r\n\r\n/**\r\n * @typedef {import('./index').default} UVClient\r\n */\r\n\r\nclass History extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = this.ctx.window;\r\n        this.History = this.window.History;\r\n        this.history = this.window.history;\r\n        this.historyProto = this.History ? this.History.prototype : {};\r\n        this.pushState = this.historyProto.pushState;\r\n        this.replaceState = this.historyProto.replaceState;\r\n        this.go = this.historyProto.go;\r\n        this.back = this.historyProto.back;\r\n        this.forward = this.historyProto.forward;\r\n    }\r\n    override() {\r\n        this.overridePushState();\r\n        this.overrideReplaceState();\r\n        this.overrideGo();\r\n        this.overrideForward();\r\n        this.overrideBack();\r\n    }\r\n    overridePushState() {\r\n        this.ctx.override(\r\n            this.historyProto,\r\n            'pushState',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [state, title, url = ''] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { state, title, url },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('pushState', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.state,\r\n                    event.data.title,\r\n                    event.data.url\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideReplaceState() {\r\n        this.ctx.override(\r\n            this.historyProto,\r\n            'replaceState',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [state, title, url = ''] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { state, title, url },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('replaceState', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.state,\r\n                    event.data.title,\r\n                    event.data.url\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideGo() {\r\n        this.ctx.override(this.historyProto, 'go', (target, that, [delta]) => {\r\n            const event = new HookEvent({ delta }, target, that);\r\n            this.emit('go', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that, event.data.delta);\r\n        });\r\n    }\r\n    overrideForward() {\r\n        this.ctx.override(this.historyProto, 'forward', (target, that) => {\r\n            const event = new HookEvent(null, target, that);\r\n            this.emit('forward', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that);\r\n        });\r\n    }\r\n    overrideBack() {\r\n        this.ctx.override(this.historyProto, 'back', (target, that) => {\r\n            const event = new HookEvent(null, target, that);\r\n            this.emit('back', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that);\r\n        });\r\n    }\r\n}\r\n\r\nexport default History;\r\n", "import EventEmitter from 'events';\r\n\r\n/**\r\n * @typedef {import('./index').default} UVClient\r\n */\r\n\r\nclass LocationApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.location = this.window.location;\r\n        this.WorkerLocation = this.ctx.worker\r\n            ? this.window.WorkerLocation\r\n            : null;\r\n        this.workerLocProto = this.WorkerLocation\r\n            ? this.WorkerLocation.prototype\r\n            : {};\r\n        this.keys = [\r\n            'href',\r\n            'protocol',\r\n            'host',\r\n            'hostname',\r\n            'port',\r\n            'pathname',\r\n            'search',\r\n            'hash',\r\n            'origin',\r\n        ];\r\n        this.HashChangeEvent = this.window.HashChangeEvent || null;\r\n        this.href = this.WorkerLocation\r\n            ? ctx.nativeMethods.getOwnPropertyDescriptor(\r\n                  this.workerLocProto,\r\n                  'href'\r\n              )\r\n            : ctx.nativeMethods.getOwnPropertyDescriptor(this.location, 'href');\r\n    }\r\n    overrideWorkerLocation(parse) {\r\n        if (!this.WorkerLocation) return false;\r\n        const uv = this;\r\n\r\n        for (const key of this.keys) {\r\n            this.ctx.overrideDescriptor(this.workerLocProto, key, {\r\n                get: () => {\r\n                    return parse(uv.href.get.call(this.location))[key];\r\n                },\r\n            });\r\n        }\r\n\r\n        return true;\r\n    }\r\n    emulate(parse, wrap) {\r\n        const emulation = {};\r\n        const that = this;\r\n\r\n        for (const key of that.keys) {\r\n            this.ctx.nativeMethods.defineProperty(emulation, key, {\r\n                get() {\r\n                    return parse(that.href.get.call(that.location))[key];\r\n                },\r\n                set:\r\n                    key !== 'origin'\r\n                        ? function (val) {\r\n                              switch (key) {\r\n                                  case 'href':\r\n                                      that.location.href = wrap(val);\r\n                                      break;\r\n                                  case 'hash':\r\n                                      that.emit(\r\n                                          'hashchange',\r\n                                          emulation.href,\r\n                                          val.trim().startsWith('#')\r\n                                              ? new URL(\r\n                                                    val.trim(),\r\n                                                    emulation.href\r\n                                                ).href\r\n                                              : new URL(\r\n                                                    '#' + val.trim(),\r\n                                                    emulation.href\r\n                                                ).href,\r\n                                          that\r\n                                      );\r\n                                      break;\r\n                                  default:\r\n                                      {\r\n                                          const url = new URL(emulation.href);\r\n                                          url[key] = val;\r\n                                          that.location.href = wrap(url.href);\r\n                                      }\r\n                                      break;\r\n                              }\r\n                          }\r\n                        : undefined,\r\n                configurable: false,\r\n                enumerable: true,\r\n            });\r\n        }\r\n\r\n        if ('reload' in this.location) {\r\n            this.ctx.nativeMethods.defineProperty(emulation, 'reload', {\r\n                value: this.ctx.wrap(\r\n                    this.location,\r\n                    'reload',\r\n                    (target, that) => {\r\n                        return target.call(\r\n                            that === emulation ? this.location : that\r\n                        );\r\n                    }\r\n                ),\r\n                writable: false,\r\n                enumerable: true,\r\n            });\r\n        }\r\n\r\n        if ('replace' in this.location) {\r\n            this.ctx.nativeMethods.defineProperty(emulation, 'replace', {\r\n                value: this.ctx.wrap(\r\n                    this.location,\r\n                    'assign',\r\n                    (target, that, args) => {\r\n                        if (!args.length || that !== emulation)\r\n                            target.call(that);\r\n                        that = this.location;\r\n                        let [input] = args;\r\n\r\n                        const url = new URL(input, emulation.href);\r\n                        return target.call(\r\n                            that === emulation ? this.location : that,\r\n                            wrap(url.href)\r\n                        );\r\n                    }\r\n                ),\r\n                writable: false,\r\n                enumerable: true,\r\n            });\r\n        }\r\n\r\n        if ('assign' in this.location) {\r\n            this.ctx.nativeMethods.defineProperty(emulation, 'assign', {\r\n                value: this.ctx.wrap(\r\n                    this.location,\r\n                    'assign',\r\n                    (target, that, args) => {\r\n                        if (!args.length || that !== emulation)\r\n                            target.call(that);\r\n                        that = this.location;\r\n                        let [input] = args;\r\n\r\n                        const url = new URL(input, emulation.href);\r\n                        return target.call(\r\n                            that === emulation ? this.location : that,\r\n                            wrap(url.href)\r\n                        );\r\n                    }\r\n                ),\r\n                writable: false,\r\n                enumerable: true,\r\n            });\r\n        }\r\n\r\n        if ('ancestorOrigins' in this.location) {\r\n            this.ctx.nativeMethods.defineProperty(\r\n                emulation,\r\n                'ancestorOrigins',\r\n                {\r\n                    get() {\r\n                        const arr = [];\r\n                        if (that.window.DOMStringList)\r\n                            that.ctx.nativeMethods.setPrototypeOf(\r\n                                arr,\r\n                                that.window.DOMStringList.prototype\r\n                            );\r\n                        return arr;\r\n                    },\r\n                    set: undefined,\r\n                    enumerable: true,\r\n                }\r\n            );\r\n        }\r\n\r\n        this.ctx.nativeMethods.defineProperty(emulation, 'toString', {\r\n            value: this.ctx.wrap(this.location, 'toString', () => {\r\n                return emulation.href;\r\n            }),\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n\r\n        this.ctx.nativeMethods.defineProperty(emulation, Symbol.toPrimitive, {\r\n            value: () => emulation.href,\r\n            writable: false,\r\n            enumerable: false,\r\n        });\r\n\r\n        if (this.ctx.window.Location)\r\n            this.ctx.nativeMethods.setPrototypeOf(\r\n                emulation,\r\n                this.ctx.window.Location.prototype\r\n            );\r\n\r\n        return emulation;\r\n    }\r\n}\r\n\r\nexport default LocationApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from './hook.js';\r\n\r\n/**\r\n * @typedef {import('./index').default} Ultraviolet\r\n */\r\n\r\nclass MessageApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {Ultraviolet} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = this.ctx.window;\r\n        this.postMessage = this.window.postMessage;\r\n        this.MessageEvent = this.window.MessageEvent || {};\r\n        this.MessagePort = this.window.MessagePort || {};\r\n        this.mpProto = this.MessagePort.prototype || {};\r\n        this.mpPostMessage = this.mpProto.postMessage;\r\n        this.messageProto = this.MessageEvent.prototype || {};\r\n        this.messageData = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.messageProto,\r\n            'data'\r\n        );\r\n        this.messageOrigin = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.messageProto,\r\n            'origin'\r\n        );\r\n    }\r\n    overridePostMessage() {\r\n        this.ctx.override(this.window, 'postMessage', (target, that, args) => {\r\n            if (!args.length) return target.apply(that, args);\r\n\r\n            let message;\r\n            let origin;\r\n            let transfer;\r\n\r\n            if (!this.ctx.worker) {\r\n                [message, origin, transfer = []] = args;\r\n            } else {\r\n                [message, transfer = []] = args;\r\n            }\r\n\r\n            const event = new HookEvent(\r\n                { message, origin, transfer, worker: this.ctx.worker },\r\n                target,\r\n                that\r\n            );\r\n            this.emit('postMessage', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return this.ctx.worker\r\n                ? event.target.call(\r\n                      event.that,\r\n                      event.data.message,\r\n                      event.data.transfer\r\n                  )\r\n                : event.target.call(\r\n                      event.that,\r\n                      event.data.message,\r\n                      event.data.origin,\r\n                      event.data.transfer\r\n                  );\r\n        });\r\n    }\r\n    wrapPostMessage(obj, prop, noOrigin = false) {\r\n        return this.ctx.wrap(obj, prop, (target, that, args) => {\r\n            if (this.ctx.worker ? !args.length : 2 > args)\r\n                return target.apply(that, args);\r\n            let message;\r\n            let origin;\r\n            let transfer;\r\n\r\n            if (!noOrigin) {\r\n                [message, origin, transfer = []] = args;\r\n            } else {\r\n                [message, transfer = []] = args;\r\n                origin = null;\r\n            }\r\n\r\n            const event = new HookEvent(\r\n                { message, origin, transfer, worker: this.ctx.worker },\r\n                target,\r\n                obj\r\n            );\r\n            this.emit('postMessage', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return noOrigin\r\n                ? event.target.call(\r\n                      event.that,\r\n                      event.data.message,\r\n                      event.data.transfer\r\n                  )\r\n                : event.target.call(\r\n                      event.that,\r\n                      event.data.message,\r\n                      event.data.origin,\r\n                      event.data.transfer\r\n                  );\r\n        });\r\n    }\r\n    overrideMessageOrigin() {\r\n        this.ctx.overrideDescriptor(this.messageProto, 'origin', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('origin', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideMessageData() {\r\n        this.ctx.overrideDescriptor(this.messageProto, 'data', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('data', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport default MessageApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from './hook.js';\r\n\r\n/**\r\n * @typedef {import('./index').default} UVClient\r\n */\r\n\r\nclass NavigatorApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.navigator = this.window.navigator;\r\n        this.Navigator = this.window.Navigator || {};\r\n        this.navProto = this.Navigator.prototype || {};\r\n        this.sendBeacon = this.navProto.sendBeacon;\r\n    }\r\n    overrideSendBeacon() {\r\n        this.ctx.override(this.navProto, 'sendBeacon', (target, that, args) => {\r\n            if (!args.length) return target.apply(that, args);\r\n            let [url, data = ''] = args;\r\n\r\n            const event = new HookEvent({ url, data }, target, that);\r\n            this.emit('sendBeacon', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(\r\n                event.that,\r\n                event.data.url,\r\n                event.data.data\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport default NavigatorApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from './hook.js';\r\nimport { BareMuxConnection } from \"@mercuryworkshop/bare-mux\";\r\n\r\n/**\r\n * @typedef {import('./index').default} UVClient\r\n */\r\n\r\nclass Workers extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.Worker = this.window.Worker || {};\r\n        this.Worklet = this.window.Worklet || {};\r\n        this.workletProto = this.Worklet.prototype || {};\r\n        this.workerProto = this.Worker.prototype || {};\r\n        this.postMessage = this.workerProto.postMessage;\r\n        this.terminate = this.workerProto.terminate;\r\n        this.addModule = this.workletProto.addModule;\r\n    }\r\n    overrideWorker() {\r\n        this.ctx.override(\r\n            this.window,\r\n            'Worker',\r\n            (target, that, args) => {\r\n                if (!args.length) return new target(...args);\r\n                let [url, options = {}] = args;\r\n\r\n                const event = new HookEvent({ url, options }, target, that);\r\n                this.emit('worker', event);\r\n\r\n\t\t\t\tlet worker;\r\n                if (event.intercepted) {\r\n\t\t\t\t\tworker = event.returnValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tworker = new event.target(\r\n\t\t\t\t\t\t...[event.data.url, event.data.options]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tconst conn = new BareMuxConnection();\r\n\t\t\t\t(async ()=>{\r\n\t\t\t\t\tconst port = await conn.getInnerPort();\r\n\t\t\t\t\tworker.postMessage(port, [port]);\r\n\t\t\t\t})();\r\n\t\t\t\treturn worker;\r\n            },\r\n            true\r\n        );\r\n    }\r\n    overrideAddModule() {\r\n        this.ctx.override(\r\n            this.workletProto,\r\n            'addModule',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [url, options = {}] = args;\r\n\r\n                const event = new HookEvent({ url, options }, target, that);\r\n                this.emit('addModule', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.url,\r\n                    event.data.options\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overridePostMessage() {\r\n        this.ctx.override(\r\n            this.workerProto,\r\n            'postMessage',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n                let [message, transfer = []] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { message, transfer },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('postMessage', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.message,\r\n                    event.data.transfer\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideImportScripts() {\r\n        this.ctx.override(\r\n            this.window,\r\n            'importScripts',\r\n            (target, that, scripts) => {\r\n                if (!scripts.length) return target.apply(that, scripts);\r\n\r\n                const event = new HookEvent({ scripts }, target, that);\r\n                this.emit('importScripts', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.apply(event.that, event.data.scripts);\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport default Workers;\r\n", "const maxRedirects = 20;\n\n// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\nconst fetch = globalThis.fetch;\nconst WebSocket = globalThis.WebSocket;\nconst Request = globalThis.Request;\nconst Response = globalThis.Response;\nconst SharedWorker = globalThis.SharedWorker;\nconst localStorage = globalThis.localStorage;\nconst serviceWorker = globalThis.navigator.serviceWorker;\nconst WebSocketFields = {\n    prototype: {\n        send: WebSocket.prototype.send,\n    },\n    CLOSED: WebSocket.CLOSED,\n    CLOSING: WebSocket.CLOSING,\n    CONNECTING: WebSocket.CONNECTING,\n    OPEN: WebSocket.OPEN,\n};\n\nasync function searchForPort() {\n    // @ts-expect-error\n    const clients = await self.clients.matchAll({ type: \"window\", includeUncontrolled: true });\n    const promises = clients.map(async (x) => {\n        const port = await tryGetPort(x);\n        await testPort(port);\n        return port;\n    });\n    const promise = Promise.race([Promise.any(promises), new Promise((_, reject) => setTimeout(reject, 1000, new TypeError(\"timeout\")))]);\n    try {\n        return await promise;\n    }\n    catch (err) {\n        if (err instanceof AggregateError) {\n            console.error(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort as all clients returned an invalid MessagePort.\");\n            throw new Error(\"All clients returned an invalid MessagePort.\");\n        }\n        console.warn(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort within 1s, retrying\");\n        return await searchForPort();\n    }\n}\nfunction tryGetPort(client) {\n    let channel = new MessageChannel();\n    return new Promise(resolve => {\n        client.postMessage({ type: \"getPort\", port: channel.port2 }, [channel.port2]);\n        channel.port1.onmessage = event => {\n            resolve(event.data);\n        };\n    });\n}\nfunction testPort(port) {\n    const pingChannel = new MessageChannel();\n    const pingPromise = new Promise((resolve, reject) => {\n        pingChannel.port1.onmessage = event => {\n            if (event.data.type === \"pong\") {\n                resolve();\n            }\n        };\n        setTimeout(reject, 1500);\n    });\n    port.postMessage({ message: { type: \"ping\" }, port: pingChannel.port2 }, [pingChannel.port2]);\n    return pingPromise;\n}\nfunction createPort(path, registerHandlers) {\n    const worker = new SharedWorker(path, \"bare-mux-worker\");\n    if (registerHandlers) {\n        // @ts-expect-error we are using snapshot.ts\n        serviceWorker.addEventListener(\"message\", (event) => {\n            if (event.data.type === \"getPort\" && event.data.port) {\n                console.debug(\"bare-mux: recieved request for port from sw\");\n                const newWorker = new SharedWorker(path, \"bare-mux-worker\");\n                event.data.port.postMessage(newWorker.port, [newWorker.port]);\n            }\n        });\n    }\n    return worker.port;\n}\nlet browserSupportsTransferringStreamsCache = null;\nfunction browserSupportsTransferringStreams() {\n    if (browserSupportsTransferringStreamsCache === null) {\n        const chan = new MessageChannel();\n        const stream = new ReadableStream();\n        let res;\n        try {\n            chan.port1.postMessage(stream, [stream]);\n            res = true;\n        }\n        catch (err) {\n            res = false;\n        }\n        browserSupportsTransferringStreamsCache = res;\n        return res;\n    }\n    else {\n        return browserSupportsTransferringStreamsCache;\n    }\n}\nclass WorkerConnection {\n    constructor(worker) {\n        this.channel = new BroadcastChannel(\"bare-mux\");\n        if (worker instanceof MessagePort) {\n            this.port = worker;\n        }\n        else {\n            this.createChannel(worker, true);\n        }\n    }\n    createChannel(workerPath, inInit) {\n        // @ts-expect-error\n        if (self.clients) {\n            // running in a ServiceWorker\n            // ask a window for the worker port, register for refreshPort\n            this.port = searchForPort();\n            this.channel.onmessage = (event) => {\n                if (event.data.type === \"refreshPort\") {\n                    this.port = searchForPort();\n                }\n            };\n        }\n        else if (workerPath && SharedWorker) {\n            // running in a window, was passed a workerPath\n            // create the SharedWorker and help other bare-mux clients get the workerPath\n            if (!workerPath.startsWith(\"/\") && !workerPath.includes(\"://\"))\n                throw new Error(\"Invalid URL. Must be absolute or start at the root.\");\n            this.port = createPort(workerPath, inInit);\n            console.debug(\"bare-mux: setting localStorage bare-mux-path to\", workerPath);\n            localStorage[\"bare-mux-path\"] = workerPath;\n        }\n        else if (SharedWorker) {\n            // running in a window, was not passed a workerPath\n            // use sessionStorage for the workerPath\n            const path = localStorage[\"bare-mux-path\"];\n            console.debug(\"bare-mux: got localStorage bare-mux-path:\", path);\n            if (!path)\n                throw new Error(\"Unable to get bare-mux workerPath from localStorage.\");\n            this.port = createPort(path, inInit);\n        }\n        else {\n            // SharedWorker does not exist\n            throw new Error(\"Unable to get a channel to the SharedWorker.\");\n        }\n    }\n    async sendMessage(message, transferable) {\n        if (this.port instanceof Promise)\n            this.port = await this.port;\n        try {\n            await testPort(this.port);\n        }\n        catch {\n            console.warn(\"bare-mux: Failed to get a ping response from the worker within 1.5s. Assuming port is dead.\");\n            this.createChannel();\n            return await this.sendMessage(message, transferable);\n        }\n        const channel = new MessageChannel();\n        const toTransfer = [channel.port2, ...(transferable || [])];\n        const promise = new Promise((resolve, reject) => {\n            channel.port1.onmessage = event => {\n                const message = event.data;\n                if (message.type === \"error\") {\n                    reject(message.error);\n                }\n                else {\n                    resolve(message);\n                }\n            };\n        });\n        this.port.postMessage({ message: message, port: channel.port2 }, toTransfer);\n        return await promise;\n    }\n}\n\nfunction sendError(port, err, name) {\n    console.error(`error while processing '${name}': `, err);\n    port.postMessage({ type: \"error\", error: err });\n}\nasync function handleFetch(message, port, transport) {\n    const resp = await transport.request(new URL(message.fetch.remote), message.fetch.method, message.fetch.body, message.fetch.headers, null);\n    if (!browserSupportsTransferringStreams() && resp.body instanceof ReadableStream) {\n        const conversionResp = new Response(resp.body);\n        resp.body = await conversionResp.arrayBuffer();\n    }\n    if (resp.body instanceof ReadableStream || resp.body instanceof ArrayBuffer) {\n        port.postMessage({ type: \"fetch\", fetch: resp }, [resp.body]);\n    }\n    else {\n        port.postMessage({ type: \"fetch\", fetch: resp });\n    }\n}\nasync function handleWebsocket(message, port, transport) {\n    const onopen = (protocol) => {\n        message.websocket.channel.postMessage({ type: \"open\", args: [protocol] });\n    };\n    const onclose = (code, reason) => {\n        message.websocket.channel.postMessage({ type: \"close\", args: [code, reason] });\n    };\n    const onerror = (error) => {\n        message.websocket.channel.postMessage({ type: \"error\", args: [error] });\n    };\n    const onmessage = (data) => {\n        if (data instanceof ArrayBuffer) {\n            message.websocket.channel.postMessage({ type: \"message\", args: [data] }, [data]);\n        }\n        else {\n            message.websocket.channel.postMessage({ type: \"message\", args: [data] });\n        }\n    };\n    const [data, close] = transport.connect(new URL(message.websocket.url), message.websocket.origin, message.websocket.protocols, message.websocket.requestHeaders, onopen, onmessage, onclose, onerror);\n    message.websocket.channel.onmessage = (event) => {\n        if (event.data.type === \"data\") {\n            data(event.data.data);\n        }\n        else if (event.data.type === \"close\") {\n            close(event.data.closeCode, event.data.closeReason);\n        }\n    };\n    port.postMessage({ type: \"websocket\" });\n}\n\nconst validChars = \"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\nfunction validProtocol(protocol) {\n    for (let i = 0; i < protocol.length; i++) {\n        const char = protocol[i];\n        if (!validChars.includes(char)) {\n            return false;\n        }\n    }\n    return true;\n}\nconst wsProtocols = ['ws:', 'wss:'];\nconst statusEmpty = [101, 204, 205, 304];\nconst statusRedirect = [301, 302, 303, 307, 308];\nclass BareMuxConnection {\n    constructor(workerPath) {\n        this.worker = new WorkerConnection(workerPath);\n    }\n    async getTransport() {\n        return (await this.worker.sendMessage({ type: \"get\" })).name;\n    }\n    async setTransport(path, options, transferables) {\n        await this.setManualTransport(`\n\t\t\tconst { default: BareTransport } = await import(\"${path}\");\n\t\t\treturn [BareTransport, \"${path}\"];\n\t\t`, options, transferables);\n    }\n    async setManualTransport(functionBody, options, transferables) {\n        if (functionBody === \"bare-mux-remote\")\n            throw new Error(\"Use setRemoteTransport.\");\n        await this.worker.sendMessage({\n            type: \"set\",\n            client: {\n                function: functionBody,\n                args: options,\n            },\n        }, transferables);\n    }\n    async setRemoteTransport(transport, name) {\n        const channel = new MessageChannel();\n        channel.port1.onmessage = async (event) => {\n            const port = event.data.port;\n            const message = event.data.message;\n            if (message.type === \"fetch\") {\n                try {\n                    if (!transport.ready)\n                        await transport.init();\n                    await handleFetch(message, port, transport);\n                }\n                catch (err) {\n                    sendError(port, err, \"fetch\");\n                }\n            }\n            else if (message.type === \"websocket\") {\n                try {\n                    if (!transport.ready)\n                        await transport.init();\n                    await handleWebsocket(message, port, transport);\n                }\n                catch (err) {\n                    sendError(port, err, \"websocket\");\n                }\n            }\n        };\n        await this.worker.sendMessage({\n            type: \"set\",\n            client: {\n                function: \"bare-mux-remote\",\n                args: [channel.port2, name]\n            },\n        }, [channel.port2]);\n    }\n    getInnerPort() {\n        return this.worker.port;\n    }\n}\nclass BareClient {\n    /**\n     * Create a BareClient. Calls to fetch and connect will wait for an implementation to be ready.\n     */\n    constructor(worker) {\n        this.worker = new WorkerConnection(worker);\n    }\n    createWebSocket(remote, protocols = [], webSocketImpl, requestHeaders, arrayBufferImpl) {\n        try {\n            remote = new URL(remote);\n        }\n        catch (err) {\n            throw new DOMException(`Faiiled to construct 'WebSocket': The URL '${remote}' is invalid.`);\n        }\n        if (!wsProtocols.includes(remote.protocol))\n            throw new DOMException(`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${remote.protocol}' is not allowed.`);\n        if (!Array.isArray(protocols))\n            protocols = [protocols];\n        protocols = protocols.map(String);\n        for (const proto of protocols)\n            if (!validProtocol(proto))\n                throw new DOMException(`Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`);\n        let wsImpl = (webSocketImpl || WebSocket);\n        const socket = new wsImpl(\"ws://127.0.0.1:1\", protocols);\n        let fakeProtocol = '';\n        let fakeReadyState = WebSocketFields.CONNECTING;\n        let initialErrorHappened = false;\n        socket.addEventListener(\"error\", (e) => {\n            if (!initialErrorHappened) {\n                fakeReadyState = WebSocket.CONNECTING;\n                e.stopImmediatePropagation();\n                initialErrorHappened = true;\n            }\n        });\n        let initialCloseHappened = false;\n        socket.addEventListener(\"close\", (e) => {\n            if (!initialCloseHappened) {\n                e.stopImmediatePropagation();\n                initialCloseHappened = true;\n            }\n        });\n        // TODO socket onerror will be broken\n        arrayBufferImpl = arrayBufferImpl || wsImpl.constructor.constructor(\"return ArrayBuffer\")().prototype;\n        requestHeaders = requestHeaders || {};\n        requestHeaders['Host'] = (new URL(remote)).host;\n        // requestHeaders['Origin'] = origin;\n        requestHeaders['Pragma'] = 'no-cache';\n        requestHeaders['Cache-Control'] = 'no-cache';\n        requestHeaders['Upgrade'] = 'websocket';\n        // requestHeaders['User-Agent'] = navigator.userAgent;\n        requestHeaders['Connection'] = 'Upgrade';\n        const onopen = (protocol) => {\n            fakeReadyState = WebSocketFields.OPEN;\n            fakeProtocol = protocol;\n            socket.meta = {\n                headers: {\n                    \"sec-websocket-protocol\": protocol,\n                }\n            }; // what the fuck is a meta\n            socket.dispatchEvent(new Event(\"open\"));\n        };\n        const onmessage = async (payload) => {\n            if (typeof payload === \"string\") {\n                socket.dispatchEvent(new MessageEvent(\"message\", { data: payload }));\n            }\n            else if (\"byteLength\" in payload) {\n                if (socket.binaryType === \"blob\") {\n                    payload = new Blob([payload]);\n                }\n                else {\n                    Object.setPrototypeOf(payload, arrayBufferImpl);\n                }\n                socket.dispatchEvent(new MessageEvent(\"message\", { data: payload }));\n            }\n            else if (\"arrayBuffer\" in payload) {\n                if (socket.binaryType === \"arraybuffer\") {\n                    payload = await payload.arrayBuffer();\n                    Object.setPrototypeOf(payload, arrayBufferImpl);\n                }\n                socket.dispatchEvent(new MessageEvent(\"message\", { data: payload }));\n            }\n        };\n        const onclose = (code, reason) => {\n            fakeReadyState = WebSocketFields.CLOSED;\n            socket.dispatchEvent(new CloseEvent(\"close\", { code, reason }));\n        };\n        const onerror = () => {\n            fakeReadyState = WebSocketFields.CLOSED;\n            socket.dispatchEvent(new Event(\"error\"));\n        };\n        const channel = new MessageChannel();\n        channel.port1.onmessage = event => {\n            if (event.data.type === \"open\") {\n                onopen(event.data.args[0]);\n            }\n            else if (event.data.type === \"message\") {\n                onmessage(event.data.args[0]);\n            }\n            else if (event.data.type === \"close\") {\n                onclose(event.data.args[0], event.data.args[1]);\n            }\n            else if (event.data.type === \"error\") {\n                onerror( /* event.data.args[0] */);\n            }\n        };\n        this.worker.sendMessage({\n            type: \"websocket\",\n            websocket: {\n                url: remote.toString(),\n                origin: origin,\n                protocols: protocols,\n                requestHeaders: requestHeaders,\n                channel: channel.port2,\n            },\n        }, [channel.port2]);\n        // protocol is always an empty before connecting\n        // updated when we receive the metadata\n        // this value doesn't change when it's CLOSING or CLOSED etc\n        const getReadyState = () => fakeReadyState;\n        // we have to hook .readyState ourselves\n        Object.defineProperty(socket, 'readyState', {\n            get: getReadyState,\n            configurable: true,\n            enumerable: true,\n        });\n        /**\n         * @returns The error that should be thrown if send() were to be called on this socket according to the fake readyState value\n         */\n        const getSendError = () => {\n            const readyState = getReadyState();\n            if (readyState === WebSocketFields.CONNECTING)\n                return new DOMException(\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\");\n        };\n        // we have to hook .send ourselves\n        // use ...args to avoid giving the number of args a quantity\n        // no arguments will trip the following error: TypeError: Failed to execute 'send' on 'WebSocket': 1 argument required, but only 0 present.\n        socket.send = function (...args) {\n            const error = getSendError();\n            if (error)\n                throw error;\n            let data = args[0];\n            // @ts-expect-error idk why it errors?\n            if (data.buffer)\n                data = data.buffer;\n            channel.port1.postMessage({ type: \"data\", data: data }, data instanceof ArrayBuffer ? [data] : []);\n        };\n        socket.close = function (code, reason) {\n            channel.port1.postMessage({ type: \"close\", closeCode: code, closeReason: reason });\n        };\n        Object.defineProperty(socket, 'url', {\n            get: () => remote.toString(),\n            configurable: true,\n            enumerable: true,\n        });\n        const getProtocol = () => fakeProtocol;\n        Object.defineProperty(socket, 'protocol', {\n            get: getProtocol,\n            configurable: true,\n            enumerable: true,\n        });\n        return socket;\n    }\n    async fetch(url, init) {\n        // Only create an instance of Request to parse certain parameters of init such as method, headers, redirect\n        // But use init values whenever possible\n        const req = new Request(url, init);\n        // try to use init.headers because it may contain capitalized headers\n        // furthermore, important headers on the Request class are blocked...\n        // we should try to preserve the capitalization due to quirks with earlier servers\n        const inputHeaders = init?.headers || req.headers;\n        const headers = inputHeaders instanceof Headers\n            ? Object.fromEntries(inputHeaders)\n            : inputHeaders;\n        const body = req.body;\n        let urlO = new URL(req.url);\n        if (urlO.protocol.startsWith('blob:')) {\n            const response = await fetch(urlO);\n            const result = new Response(response.body, response);\n            result.rawHeaders = Object.fromEntries(response.headers);\n            result.rawResponse = response;\n            return result;\n        }\n        for (let i = 0;; i++) {\n            if ('host' in headers)\n                headers.host = urlO.host;\n            else\n                headers.Host = urlO.host;\n            let resp = (await this.worker.sendMessage({\n                type: \"fetch\",\n                fetch: {\n                    remote: urlO.toString(),\n                    method: req.method,\n                    headers: headers,\n                    body: body || undefined,\n                },\n            }, body ? [body] : [])).fetch;\n            let responseobj = new Response(statusEmpty.includes(resp.status) ? undefined : resp.body, {\n                headers: new Headers(resp.headers),\n                status: resp.status,\n                statusText: resp.statusText,\n            });\n            responseobj.rawHeaders = resp.headers;\n            responseobj.rawResponse = new Response(resp.body);\n            responseobj.finalURL = urlO.toString();\n            const redirect = init?.redirect || req.redirect;\n            if (statusRedirect.includes(responseobj.status)) {\n                switch (redirect) {\n                    case 'follow': {\n                        const location = responseobj.headers.get('location');\n                        if (maxRedirects > i && location !== null) {\n                            urlO = new URL(location, urlO);\n                            continue;\n                        }\n                        else\n                            throw new TypeError('Failed to fetch');\n                    }\n                    case 'error':\n                        throw new TypeError('Failed to fetch');\n                    case 'manual':\n                        return responseobj;\n                }\n            }\n            else {\n                return responseobj;\n            }\n        }\n    }\n}\n\nexport { BareClient, BareMuxConnection, WebSocketFields, WorkerConnection, browserSupportsTransferringStreams, BareClient as default, maxRedirects, validProtocol };\n//# sourceMappingURL=index.mjs.map\n", "import EventEmitter from 'events';\r\nimport HookEvent from './hook.js';\r\n\r\n/**\r\n * @typedef {import('./index').default} UVClient\r\n */\r\n\r\nclass URLApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = this.ctx.window;\r\n        this.URL = this.window.URL || {};\r\n        this.createObjectURL = this.URL.createObjectURL;\r\n        this.revokeObjectURL = this.URL.revokeObjectURL;\r\n    }\r\n    overrideObjectURL() {\r\n        this.ctx.override(this.URL, 'createObjectURL', (target, that, args) => {\r\n            if (!args.length) return target.apply(that, args);\r\n            let [object] = args;\r\n\r\n            const event = new HookEvent({ object }, target, that);\r\n            this.emit('createObjectURL', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that, event.data.object);\r\n        });\r\n        this.ctx.override(this.URL, 'revokeObjectURL', (target, that, args) => {\r\n            if (!args.length) return target.apply(that, args);\r\n            let [url] = args;\r\n\r\n            const event = new HookEvent({ url }, target, that);\r\n            this.emit('revokeObjectURL', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that, event.data.url);\r\n        });\r\n    }\r\n}\r\n\r\nexport default URLApi;\r\n", "import DocumentHook from './dom/document.js';\r\nimport ElementApi from './dom/element.js';\r\nimport NodeApi from './dom/node.js';\r\nimport AttrApi from './dom/attr.js';\r\nimport FunctionHook from './native/function.js';\r\nimport ObjectHook from './native/object.js';\r\nimport Fetch from './requests/fetch.js';\r\nimport Xhr from './requests/xhr.js';\r\nimport EventSourceApi from './requests/eventsource.js';\r\nimport History from './history.js';\r\nimport LocationApi from './location.js';\r\nimport MessageApi from './message.js';\r\nimport NavigatorApi from './navigator.js';\r\nimport Workers from './worker.js';\r\nimport URLApi from './url.js';\r\nimport EventEmitter from 'events';\r\nimport StorageApi from './storage.js';\r\nimport StyleApi from './dom/style.js';\r\nimport IDBApi from './idb.js';\r\nimport WebSocketApi from './requests/websocket.js';\r\n\r\n/**\r\n * @template {Function} [T=Function]\r\n * @typedef {(fn: T, that: any, args: any[]) => {}} WrapFun\r\n */\r\n\r\n/**\r\n * @typedef {object} WrapPropertyDescriptor\r\n * @property {WrapFun} [get]\r\n * @property {WrapFun} [set]\r\n */\r\n\r\nclass UVClient extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {typeof globalThis} window\r\n     * @param {import('@mercuryworkshop/bare-mux').BareClient} bareClient\r\n     * @param {boolean} worker\r\n     */\r\n    constructor(window = self, bareClient, worker = !window.window) {\r\n        super();\r\n        /**\r\n         * @type {typeof globalThis}\r\n         */\r\n        this.window = window;\r\n        this.nativeMethods = {\r\n            fnToString: this.window.Function.prototype.toString,\r\n            defineProperty: this.window.Object.defineProperty,\r\n            getOwnPropertyDescriptor:\r\n                this.window.Object.getOwnPropertyDescriptor,\r\n            getOwnPropertyDescriptors:\r\n                this.window.Object.getOwnPropertyDescriptors,\r\n            getOwnPropertyNames: this.window.Object.getOwnPropertyNames,\r\n            keys: this.window.Object.keys,\r\n            getOwnPropertySymbols: this.window.Object.getOwnPropertySymbols,\r\n            isArray: this.window.Array.isArray,\r\n            setPrototypeOf: this.window.Object.setPrototypeOf,\r\n            isExtensible: this.window.Object.isExtensible,\r\n            Map: this.window.Map,\r\n            Proxy: this.window.Proxy,\r\n        };\r\n        this.worker = worker;\r\n        this.bareClient = bareClient;\r\n        this.fetch = new Fetch(this);\r\n        this.xhr = new Xhr(this);\r\n        this.idb = new IDBApi(this);\r\n        this.history = new History(this);\r\n        this.element = new ElementApi(this);\r\n        this.node = new NodeApi(this);\r\n        this.document = new DocumentHook(this);\r\n        this.function = new FunctionHook(this);\r\n        this.object = new ObjectHook(this);\r\n        this.websocket = new WebSocketApi(this);\r\n        this.message = new MessageApi(this);\r\n        this.navigator = new NavigatorApi(this);\r\n        this.eventSource = new EventSourceApi(this);\r\n        this.attribute = new AttrApi(this);\r\n        this.url = new URLApi(this);\r\n        this.workers = new Workers(this);\r\n        this.location = new LocationApi(this);\r\n        this.storage = new StorageApi(this);\r\n        this.style = new StyleApi(this);\r\n    }\r\n    /**\r\n     *\r\n     * @param {*} obj\r\n     * @param {PropertyKey} prop\r\n     * @param {WrapFun} wrapper\r\n     * @param {boolean} [construct]\r\n     * @returns\r\n     */\r\n    override(obj, prop, wrapper, construct) {\r\n        // if (!(prop in obj)) return false;\r\n        const wrapped = this.wrap(obj, prop, wrapper, construct);\r\n        obj[prop] = wrapped;\r\n        return wrapped;\r\n    }\r\n    /**\r\n     *\r\n     * @param {*} obj\r\n     * @param {PropertyKey} prop\r\n     * @param {WrapPropertyDescriptor} [wrapObj]\r\n     * @returns\r\n     */\r\n    overrideDescriptor(obj, prop, wrapObj = {}) {\r\n        const wrapped = this.wrapDescriptor(obj, prop, wrapObj);\r\n        if (!wrapped) return {};\r\n        this.nativeMethods.defineProperty(obj, prop, wrapped);\r\n        return wrapped;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @template T\r\n     * @param {*} obj\r\n     * @param {PropertyKey} prop\r\n     * @param {WrapFun<T>} wrap\r\n     * @param {boolean} [construct]\r\n     * @returns {T}\r\n     */\r\n    wrap(obj, prop, wrap, construct = false) {\r\n        const fn = obj[prop];\r\n        if (!fn) return fn;\r\n        const wrapped =\r\n            'prototype' in fn\r\n                ? function attach() {\r\n                      return wrap(fn, this, [...arguments]);\r\n                  }\r\n                : {\r\n                      attach() {\r\n                          return wrap(fn, this, [...arguments]);\r\n                      },\r\n                  }.attach;\r\n\r\n        if (construct) {\r\n            wrapped.prototype = fn.prototype;\r\n            wrapped.prototype.constructor = wrapped;\r\n        }\r\n\r\n        this.emit('wrap', fn, wrapped, construct);\r\n\r\n        return wrapped;\r\n    }\r\n    /**\r\n     *\r\n     * @param {*} obj\r\n     * @param {PropertyKey} prop\r\n     * @param {WrapPropertyDescriptor} [wrapObj]\r\n     * @returns\r\n     */\r\n    wrapDescriptor(obj, prop, wrapObj = {}) {\r\n        const descriptor = this.nativeMethods.getOwnPropertyDescriptor(\r\n            obj,\r\n            prop\r\n        );\r\n        if (!descriptor) return false;\r\n        for (let key in wrapObj) {\r\n            if (key in descriptor) {\r\n                if (key === 'get' || key === 'set') {\r\n                    descriptor[key] = this.wrap(descriptor, key, wrapObj[key]);\r\n                } else {\r\n                    descriptor[key] =\r\n                        typeof wrapObj[key] == 'function'\r\n                            ? wrapObj[key](descriptor[key])\r\n                            : wrapObj[key];\r\n                }\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n}\r\n\r\nexport default UVClient;\r\nif (typeof self === 'object') self.UVClient = UVClient;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from './hook.js';\r\n\r\n/**\r\n * @typedef {import('./index').default} UVClient\r\n */\r\n\r\nclass StorageApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.localStorage = this.window.localStorage || null;\r\n        this.sessionStorage = this.window.sessionStorage || null;\r\n        this.Storage = this.window.Storage || {};\r\n        this.storeProto = this.Storage.prototype || {};\r\n        this.getItem = this.storeProto.getItem || null;\r\n        this.setItem = this.storeProto.setItem || null;\r\n        this.removeItem = this.storeProto.removeItem || null;\r\n        this.clear = this.storeProto.clear || null;\r\n        this.key = this.storeProto.key || null;\r\n        this.methods = ['key', 'getItem', 'setItem', 'removeItem', 'clear'];\r\n        this.wrappers = new ctx.nativeMethods.Map();\r\n    }\r\n    overrideMethods() {\r\n        this.ctx.override(this.storeProto, 'getItem', (target, that, args) => {\r\n            if (!args.length)\r\n                return target.apply(this.wrappers.get(that) || that, args);\r\n            let [name] = args;\r\n\r\n            const event = new HookEvent(\r\n                { name },\r\n                target,\r\n                this.wrappers.get(that) || that\r\n            );\r\n            this.emit('getItem', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that, event.data.name);\r\n        });\r\n        this.ctx.override(this.storeProto, 'setItem', (target, that, args) => {\r\n            if (2 > args.length)\r\n                return target.apply(this.wrappers.get(that) || that, args);\r\n            let [name, value] = args;\r\n\r\n            const event = new HookEvent(\r\n                { name, value },\r\n                target,\r\n                this.wrappers.get(that) || that\r\n            );\r\n            this.emit('setItem', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(\r\n                event.that,\r\n                event.data.name,\r\n                event.data.value\r\n            );\r\n        });\r\n        this.ctx.override(\r\n            this.storeProto,\r\n            'removeItem',\r\n            (target, that, args) => {\r\n                if (!args.length)\r\n                    return target.apply(this.wrappers.get(that) || that, args);\r\n                let [name] = args;\r\n\r\n                const event = new HookEvent(\r\n                    { name },\r\n                    target,\r\n                    this.wrappers.get(that) || that\r\n                );\r\n                this.emit('removeItem', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.name);\r\n            }\r\n        );\r\n        this.ctx.override(this.storeProto, 'clear', (target, that) => {\r\n            const event = new HookEvent(\r\n                null,\r\n                target,\r\n                this.wrappers.get(that) || that\r\n            );\r\n            this.emit('clear', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that);\r\n        });\r\n        this.ctx.override(this.storeProto, 'key', (target, that, args) => {\r\n            if (!args.length)\r\n                return target.apply(this.wrappers.get(that) || that, args);\r\n            let [index] = args;\r\n\r\n            const event = new HookEvent(\r\n                { index },\r\n                target,\r\n                this.wrappers.get(that) || that\r\n            );\r\n            this.emit('key', event);\r\n\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that, event.data.index);\r\n        });\r\n    }\r\n    overrideLength() {\r\n        this.ctx.overrideDescriptor(this.storeProto, 'length', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { length: target.call(this.wrappers.get(that) || that) },\r\n                    target,\r\n                    this.wrappers.get(that) || that\r\n                );\r\n                this.emit('length', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.length;\r\n            },\r\n        });\r\n    }\r\n    emulate(storage, obj = {}) {\r\n        this.ctx.nativeMethods.setPrototypeOf(obj, this.storeProto);\r\n\r\n        const proxy = new this.ctx.window.Proxy(obj, {\r\n            get: (target, prop) => {\r\n                if (prop in this.storeProto || typeof prop === 'symbol')\r\n                    return storage[prop];\r\n\r\n                const event = new HookEvent({ name: prop }, null, storage);\r\n                this.emit('get', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return storage[event.data.name];\r\n            },\r\n            set: (target, prop, value) => {\r\n                if (prop in this.storeProto || typeof prop === 'symbol')\r\n                    return (storage[prop] = value);\r\n\r\n                const event = new HookEvent(\r\n                    { name: prop, value },\r\n                    null,\r\n                    storage\r\n                );\r\n                this.emit('set', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return (storage[event.data.name] = event.data.value);\r\n            },\r\n            deleteProperty: (target, prop) => {\r\n                if (typeof prop === 'symbol') return delete storage[prop];\r\n\r\n                const event = new HookEvent({ name: prop }, null, storage);\r\n                this.emit('delete', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n\r\n                return delete storage[event.data.name];\r\n            },\r\n        });\r\n\r\n        this.wrappers.set(proxy, storage);\r\n        this.ctx.nativeMethods.setPrototypeOf(proxy, this.storeProto);\r\n\r\n        return proxy;\r\n    }\r\n}\r\n\r\nexport default StorageApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass StyleApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.CSSStyleDeclaration = this.window.CSSStyleDeclaration || {};\r\n        this.cssStyleProto = this.CSSStyleDeclaration.prototype || {};\r\n        this.getPropertyValue = this.cssStyleProto.getPropertyValue || null;\r\n        this.setProperty = this.cssStyleProto.setProperty || null;\r\n        this.cssText -\r\n            ctx.nativeMethods.getOwnPropertyDescriptors(\r\n                this.cssStyleProto,\r\n                'cssText'\r\n            );\r\n        this.urlProps = [\r\n            'background',\r\n            'backgroundImage',\r\n            'borderImage',\r\n            'borderImageSource',\r\n            'listStyle',\r\n            'listStyleImage',\r\n            'cursor',\r\n        ];\r\n        this.dashedUrlProps = [\r\n            'background',\r\n            'background-image',\r\n            'border-image',\r\n            'border-image-source',\r\n            'list-style',\r\n            'list-style-image',\r\n            'cursor',\r\n        ];\r\n        this.propToDashed = {\r\n            background: 'background',\r\n            backgroundImage: 'background-image',\r\n            borderImage: 'border-image',\r\n            borderImageSource: 'border-image-source',\r\n            listStyle: 'list-style',\r\n            listStyleImage: 'list-style-image',\r\n            cursor: 'cursor',\r\n        };\r\n    }\r\n    overrideSetGetProperty() {\r\n        this.ctx.override(\r\n            this.cssStyleProto,\r\n            'getPropertyValue',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n\r\n                let [property] = args;\r\n\r\n                const event = new HookEvent({ property }, target, that);\r\n                this.emit('getPropertyValue', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.property);\r\n            }\r\n        );\r\n        this.ctx.override(\r\n            this.cssStyleProto,\r\n            'setProperty',\r\n            (target, that, args) => {\r\n                if (2 > args.length) return target.apply(that, args);\r\n                let [property, value] = args;\r\n\r\n                const event = new HookEvent({ property, value }, target, that);\r\n                this.emit('setProperty', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.property,\r\n                    event.data.value\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideCssText() {\r\n        this.ctx.overrideDescriptor(this.cssStyleProto, 'cssText', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('getCssText', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n            set: (target, that, [val]) => {\r\n                const event = new HookEvent({ value: val }, target, that);\r\n                this.emit('setCssText', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(event.that, event.data.value);\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport default StyleApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from './hook.js';\r\n\r\n/**\r\n * @typedef {import('./index').default} Ultraviolet\r\n */\r\n\r\nclass IDBApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {Ultraviolet} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = this.ctx.window;\r\n        this.IDBDatabase = this.window.IDBDatabase || {};\r\n        this.idbDatabaseProto = this.IDBDatabase.prototype || {};\r\n        this.IDBFactory = this.window.IDBFactory || {};\r\n        this.idbFactoryProto = this.IDBFactory.prototype || {};\r\n        this.open = this.idbFactoryProto.open;\r\n    }\r\n    overrideOpen() {\r\n        this.ctx.override(\r\n            this.IDBFactory.prototype,\r\n            'open',\r\n            (target, that, args) => {\r\n                if (!args.length) return target.apply(that, args);\r\n\r\n                if (!args.length) return target.apply(that, args);\r\n                const [name, version] = args;\r\n\r\n                const event = new HookEvent({ name, version }, target, that);\r\n                this.emit('idbFactoryOpen', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.target.call(\r\n                    event.that,\r\n                    event.data.name,\r\n                    event.data.version\r\n                );\r\n            }\r\n        );\r\n    }\r\n    overrideName() {\r\n        this.ctx.overrideDescriptor(this.idbDatabaseProto, 'name', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('idbFactoryName', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport default IDBApi;\r\n", "import EventEmitter from 'events';\r\nimport HookEvent from '../hook.js';\r\n\r\n/**\r\n * @typedef {import('../index').default} UVClient\r\n */\r\n\r\nclass WebSocketApi extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {UVClient} ctx\r\n     */\r\n    constructor(ctx) {\r\n        super();\r\n        this.ctx = ctx;\r\n        this.window = ctx.window;\r\n        this.WebSocket = this.window.WebSocket || {};\r\n        this.wsProto = this.WebSocket.prototype || {};\r\n        this.url = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.wsProto,\r\n            'url'\r\n        );\r\n        this.protocol = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.wsProto,\r\n            'protocol'\r\n        );\r\n        this.readyState = ctx.nativeMethods.getOwnPropertyDescriptor(\r\n            this.wsProto,\r\n            'readyState'\r\n        );\r\n        this.send = this.wsProto.send;\r\n        this.CONNECTING = WebSocket.CONNECTING;\r\n        this.OPEN = WebSocket.OPEN;\r\n        this.CLOSING = WebSocket.CLOSING;\r\n        this.CLOSED = WebSocket.CLOSED;\r\n    }\r\n    overrideWebSocket() {\r\n        this.ctx.override(\r\n            this.window,\r\n            'WebSocket',\r\n            (target, that, args) => {\r\n                if (!args.length) return new target(...args);\r\n                // just give the listeners direct access to the arguments\r\n                // an error occurs with too little arguments, listeners should be able to catch that\r\n                const event = new HookEvent({ args }, target, that);\r\n                this.emit('websocket', event);\r\n\r\n                if (event.intercepted) return event.returnValue;\r\n                return new event.target(event.data.url, event.data.protocols);\r\n            },\r\n            true\r\n        );\r\n\r\n        this.window.WebSocket.CONNECTING = this.CONNECTING;\r\n        this.window.WebSocket.OPEN = this.OPEN;\r\n        this.window.WebSocket.CLOSING = this.CLOSING;\r\n        this.window.WebSocket.CLOSED = this.CLOSED;\r\n    }\r\n    overrideURL() {\r\n        this.ctx.overrideDescriptor(this.wsProto, 'url', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('url', event);\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideProtocol() {\r\n        this.ctx.overrideDescriptor(this.wsProto, 'protocol', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('protocol', event);\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideReadyState() {\r\n        this.ctx.overrideDescriptor(this.wsProto, 'readyState', {\r\n            get: (target, that) => {\r\n                const event = new HookEvent(\r\n                    { value: target.call(that) },\r\n                    target,\r\n                    that\r\n                );\r\n                this.emit('readyState', event);\r\n                return event.data.value;\r\n            },\r\n        });\r\n    }\r\n    overrideSend() {\r\n        this.ctx.override(this.wsProto, 'send', (target, that, args) => {\r\n            const event = new HookEvent({ args }, target, that);\r\n            this.emit('send', event);\r\n            if (event.intercepted) return event.returnValue;\r\n            return event.target.call(event.that, event.data.args);\r\n        });\r\n    }\r\n}\r\n\r\nexport default WebSocketApi;\r\n"],
  "mappings": "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",
  "names": ["require_events", "__commonJSMin", "exports", "module", "R", "ReflectApply", "target", "receiver", "args", "ReflectOwnKeys", "ProcessEmitWarning", "warning", "NumberIsNaN", "value", "EventEmitter", "once", "defaultMaxListeners", "checkListener", "listener", "arg", "n", "_getMaxListeners", "that", "type", "i", "doError", "events", "er", "err", "handler", "len", "listeners", "arrayClone", "_addListener", "prepend", "m", "existing", "w", "onceWrapper", "_onceWrap", "state", "wrapped", "list", "position", "originalListener", "spliceOne", "keys", "key", "_listeners", "unwrap", "evlistener", "unwrapListeners", "emitter", "listenerCount", "arr", "copy", "index", "ret", "name", "resolve", "reject", "errorListener", "resolver", "eventTargetAgnosticAddListener", "addErrorHandlerIfEventEmitter", "flags", "wrapListener", "import_events", "HookEvent", "#intercepted", "#returnValue", "data", "target", "that", "input", "hook_default", "DocumentHook", "EventEmitter", "ctx", "target", "that", "args", "string", "type", "event", "hook_default", "selectors", "val", "root", "show", "filter", "expandEntityReferences", "html", "value", "document_default", "import_events", "ElementApi", "EventEmitter", "ctx", "target", "that", "args", "selectors", "event", "hook_default", "name", "value", "url", "val", "position", "html", "text", "element", "prop", "handler", "elem", "proto", "element_default", "import_events", "NodeApi", "EventEmitter", "ctx", "target", "that", "event", "hook_default", "val", "nodes", "args", "node", "node_default", "import_events", "AttrApi", "EventEmitter", "ctx", "target", "that", "event", "hook_default", "val", "args", "name", "value", "index", "namespace", "localName", "attr", "attr_default", "import_events", "FunctionHook", "EventEmitter", "ctx", "target", "that", "args", "script", "fnArgs", "i", "event", "hook_default", "function_default", "import_events", "ObjectHook", "EventEmitter", "ctx", "target", "that", "args", "object", "event", "hook_default", "object_default", "import_events", "Fetch", "EventEmitter", "ctx", "target", "that", "args", "input", "options", "event", "hook_default", "name", "value", "fetch_default", "import_events", "Xhr", "EventEmitter", "ctx", "target", "that", "args", "method", "input", "async", "user", "password", "event", "hook_default", "body", "name", "value", "xhr_default", "import_events", "EventSourceApi", "EventEmitter", "ctx", "target", "that", "args", "url", "config", "event", "hook_default", "eventsource_default", "import_events", "History", "EventEmitter", "ctx", "target", "that", "args", "state", "title", "url", "event", "hook_default", "delta", "history_default", "import_events", "LocationApi", "EventEmitter", "ctx", "parse", "uv", "key", "wrap", "emulation", "that", "val", "url", "target", "args", "input", "arr", "location_default", "import_events", "MessageApi", "EventEmitter", "ctx", "target", "that", "args", "message", "origin", "transfer", "event", "hook_default", "obj", "prop", "noOrigin", "message_default", "import_events", "NavigatorApi", "EventEmitter", "ctx", "target", "that", "args", "url", "data", "event", "hook_default", "navigator_default", "import_events", "fetch", "WebSocket", "Request", "Response", "SharedWorker", "localStorage", "serviceWorker", "WebSocketFields", "searchForPort", "promises", "x", "port", "tryGetPort", "testPort", "promise", "_", "reject", "err", "client", "channel", "resolve", "event", "pingChannel", "pingPromise", "createPort", "path", "registerHandlers", "worker", "newWorker", "browserSupportsTransferringStreamsCache", "browserSupportsTransferringStreams", "chan", "stream", "res", "WorkerConnection", "workerPath", "inInit", "message", "transferable", "toTransfer", "sendError", "name", "handleFetch", "transport", "resp", "conversionResp", "handleWebsocket", "onopen", "protocol", "onclose", "code", "reason", "onerror", "error", "onmessage", "data", "close", "BareMuxConnection", "workerPath", "WorkerConnection", "path", "options", "transferables", "functionBody", "transport", "name", "channel", "event", "port", "message", "handleFetch", "err", "sendError", "handleWebsocket", "Workers", "EventEmitter", "ctx", "target", "that", "args", "url", "options", "event", "hook_default", "worker", "conn", "BareMuxConnection", "port", "message", "transfer", "scripts", "worker_default", "import_events", "URLApi", "EventEmitter", "ctx", "target", "that", "args", "object", "event", "hook_default", "url", "url_default", "import_events", "import_events", "StorageApi", "EventEmitter", "ctx", "target", "that", "args", "name", "event", "hook_default", "value", "index", "storage", "obj", "proxy", "prop", "storage_default", "import_events", "StyleApi", "EventEmitter", "ctx", "target", "that", "args", "property", "event", "hook_default", "value", "val", "style_default", "import_events", "IDBApi", "EventEmitter", "ctx", "target", "that", "args", "name", "version", "event", "hook_default", "idb_default", "import_events", "WebSocketApi", "EventEmitter", "ctx", "target", "that", "args", "event", "hook_default", "websocket_default", "UVClient", "EventEmitter", "window", "bareClient", "worker", "fetch_default", "xhr_default", "idb_default", "history_default", "element_default", "node_default", "document_default", "function_default", "object_default", "websocket_default", "message_default", "navigator_default", "eventsource_default", "attr_default", "url_default", "worker_default", "location_default", "storage_default", "style_default", "obj", "prop", "wrapper", "construct", "wrapped", "wrapObj", "wrap", "fn", "descriptor", "key", "client_default"]
}
